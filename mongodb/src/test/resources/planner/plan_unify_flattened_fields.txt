Chain
├─ $ReadF(db; zips)
├─ $ProjectF
│  ├─ Name("s" -> "$$ROOT")
│  ├─ Name("f" -> {
│  │       "$cond": [
│  │         {
│  │           "$and": [
│  │             { "$lte": [{ "$literal": [] }, "$loc"] },
│  │             { "$lt": ["$loc", { "$literal": BinData(0, "") }] }]
│  │         },
│  │         "$loc",
│  │         [{ "$literal": undefined }]]
│  │     })
│  ╰─ ExcludeId
├─ $UnwindF(DocField(BsonField.Name("f")))
├─ $ProjectF
│  ├─ Name("0" -> {
│  │       "filter_source": {
│  │         "$cond": [
│  │           {
│  │             "$and": [
│  │               { "$lte": [{ "$literal": {  } }, "$s"] },
│  │               { "$lt": ["$s", { "$literal": [] }] }]
│  │           },
│  │           "$s",
│  │           { "$literal": undefined }]
│  │       },
│  │       "filter_predicate": { "$lt": ["$f", { "$literal": NumberInt("0") }] }
│  │     })
│  ╰─ ExcludeId
├─ $MatchF
│  ╰─ Doc
│     ╰─ Expr($0.filter_predicate -> Eq(Bool(true)))
├─ $ProjectF
│  ├─ Name("0" -> {
│  │       "$cond": [
│  │         {
│  │           "$and": [
│  │             { "$lte": [{ "$literal": [] }, "$0.filter_source.loc"] },
│  │             { "$lt": ["$0.filter_source.loc", { "$literal": BinData(0, "") }] }]
│  │         },
│  │         "$0.filter_source.loc",
│  │         [{ "$literal": undefined }]]
│  │     })
│  ╰─ ExcludeId
├─ $UnwindF(DocField(BsonField.Name("0")))
╰─ $ProjectF
   ├─ Name("__quasar_mongodb_sigil" -> "$0")
   ╰─ ExcludeId